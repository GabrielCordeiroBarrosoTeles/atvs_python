
"""
[01:18, 21/06/2024] Cordeiro: GRUPO 3
üöÄ [Desafio 002] Desenvolvimento de um Jogo de Adivinha√ß√£o

O objetivo deste desafio √© criar um jogo de adivinha√ß√£o em que o usu√°rio tentar√° adivinhar um n√∫mero gerado aleatoriamente. Siga as especifica√ß√µes abaixo para completar o desafio:

1. Funcionalidades do Jogo:
    - Ao iniciar, o jogo perguntar√° ao usu√°rio quantas vezes ele deseja jogar e repetir√° os sorteios na quantidade informada pelo usu√°rio.
    - Para cada rodada, o jogo pedir√° ao usu√°rio para digitar um n√∫mero entre 1 e 10.
    - O jogo utilizar√° uma fun√ß√£o para gerar um n√∫mero aleat√≥rio de 1 a 10 (fun√ß√£o de gera√ß√£o de n√∫mero rand√¥mico).
    - Se o usu√°rio acertar o n√∫mero, o jogo informar√° que ele acertou.
    - Se o usu√°rio errar, o jogo informar√° o n√∫mero sorteado.
    - A cada repeti√ß√£o do sorteio, caso o usu√°rio tenha acertado, o jogo somar√° 3 pontos. Se errar, subtrair√° 1 ponto.

2. Pontua√ß√£o Final:
    - No final de todas as rodadas, o jogo apresentar√° a pontua√ß√£o final do usu√°rio.

3. Execu√ß√£o do Jogo:
    - O jogo funcionar√° no terminal, sem necessidade de interface gr√°fica.

[Desafio 003] O objetivo desta miss√£o e refazer o jogo anterior com uma interface gr√°fica:

0. A biblioteca para cria√ß√£o da interface √© de sua escolha.
"""
import tkinter as tk
from tkinter import messagebox
import random

class JogoAdivinhacao:
    def __init__(self, root):
        self.root = root
        self.root.title("Jogo de Adivinha√ß√£o!!")

        self.rodadas = 0
        self.pontuacao = 0
        self.rodada_atual = 0

        self.label_inicial = tk.Label(root, text="Quantas vezes voc√™ qr jogar?")
        self.label_inicial.pack()

        self.entry_rodadas = tk.Entry(root)
        self.entry_rodadas.pack()

        self.botao_iniciar = tk.Button(root, text="Iniciar Jogo", command=self.iniciar_jogo)
        self.botao_iniciar.pack()

        self.label_rodada = tk.Label(root, text="")
        self.label_rodada.pack()

        self.entry_numero = tk.Entry(root)
        self.entry_numero.pack()

        self.botao_adivinhar = tk.Button(root, text="Adivinhar", command=self.adivinhar, state=tk.DISABLED)
        self.botao_adivinhar.pack()

        self.label_resultado = tk.Label(root, text="")
        self.label_resultado.pack()

        self.label_pontuacao = tk.Label(root, text="")
        self.label_pontuacao.pack()

    def iniciar_jogo(self):
        try:
            self.rodadas = int(self.entry_rodadas.get())
            if self.rodadas <= 0:
                raise ValueError
            self.rodada_atual = 0
            self.pontuacao = 0
            self.label_resultado.config(text="")
            self.label_pontuacao.config(text="")
            self.proxima_rodada()
        except ValueError:
            messagebox.showerror("Erro", "Por favor, informa um n√∫mero v√°lido de rodadas.")

    def proxima_rodada(self):
        self.rodada_atual += 1
        if self.rodada_atual > self.rodadas:
            self.fim_jogo()
        else:
            self.label_rodada.config(text=f"Rodada {self.rodada_atual} de {self.rodadas}")
            self.botao_adivinhar.config(state=tk.NORMAL)
            self.entry_numero.delete(0, tk.END)
            self.entry_numero.focus()

    def adivinhar(self):
        try:
            numero_usuario = int(self.entry_numero.get())
            if numero_usuario < 1 or numero_usuario > 10:
                raise ValueError
            numero_sorteado = random.randint(1, 10)
            if numero_usuario == numero_sorteado:
                self.pontuacao += 3
                self.label_resultado.config(text=f"Voc√™ acertou! O n√∫mero era {numero_sorteado}.")
            else:
                self.pontuacao -= 1
                if self.pontuacao < 0:
                    self.pontuacao = 0  # Evita pontua√ß√£o negativa
                self.label_resultado.config(text=f"Voc√™ errou! O n√∫mero era {numero_sorteado}.")
            self.label_pontuacao.config(text=f"Pontua√ß√£o: {self.pontuacao}")
            self.botao_adivinhar.config(state=tk.DISABLED)
            self.root.after(2000, self.proxima_rodada)
        except ValueError:
            messagebox.showerror("Erro", "Por favor, informa um n√∫mero v√°lido entre 1 e 10.")

    def fim_jogo(self):
        messagebox.showinfo("Fim de Jogo", f"Fim de jogo! Sua pontua√ß√£o final √© {self.pontuacao}.")
        self.label_rodada.config(text="")
        self.label_resultado.config(text="")
        self.label_pontuacao.config(text="")
        self.entry_rodadas.delete(0, tk.END)
        self.entry_numero.delete(0, tk.END)

if __name__ == "__main__":
    root = tk.Tk()
    jogo = JogoAdivinhacao(root)
    root.mainloop()
